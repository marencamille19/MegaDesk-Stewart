<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kUpWpQUpSgFKUoD/2Q==
</value>
  </data>
</root>